// <auto-generated />
using BookListWeb.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BookListWeb.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240203144459_updateDatabase2")]
    partial class updateDatabase2
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0-preview.1.23111.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("BookListWeb.Models.Book", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Author")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("Rating")
                        .HasColumnType("real");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("yearOfPublication")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Books");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Author = "Agatha Christie",
                            CategoryId = 1,
                            Description = "A classic detective novel featuring Hercule Poirot.",
                            ImageUrl = "https://example.com/murder_on_orient_express.jpg",
                            Rating = 4.7f,
                            Title = "Murder on the Orient Express",
                            yearOfPublication = 1934
                        },
                        new
                        {
                            Id = 2,
                            Author = "Agatha Christie",
                            CategoryId = 2,
                            Description = "A suspenseful mystery with an isolated setting and a deadly plot.",
                            ImageUrl = "https://example.com/and_then_there_were_none.jpg",
                            Rating = 4.8f,
                            Title = "And Then There Were None",
                            yearOfPublication = 1939
                        },
                        new
                        {
                            Id = 3,
                            Author = "Victoria Aveyard",
                            CategoryId = 3,
                            Description = "Victoria Aveyard's gripping tale of power, betrayal, and rebellion.",
                            ImageUrl = "https://example.com/red_queen.jpg",
                            Rating = 4.5f,
                            Title = "Red Queen",
                            yearOfPublication = 2015
                        },
                        new
                        {
                            Id = 4,
                            Author = "Victoria Aveyard",
                            CategoryId = 4,
                            Description = "The sequel to Red Queen, continuing the story of Mare Barrow.",
                            ImageUrl = "https://example.com/glass_sword.jpg",
                            Rating = 4.4f,
                            Title = "Glass Sword",
                            yearOfPublication = 2016
                        },
                        new
                        {
                            Id = 5,
                            Author = "Agatha Christie",
                            CategoryId = 5,
                            Description = "Agatha Christie's personal account of her life and career.",
                            ImageUrl = "https://example.com/agatha_christie_autobiography.jpg",
                            Rating = 4.6f,
                            Title = "Agatha Christie: An Autobiography",
                            yearOfPublication = 1977
                        },
                        new
                        {
                            Id = 6,
                            Author = "Victoria Aveyard",
                            CategoryId = 6,
                            Description = "The third book in the Red Queen series by Victoria Aveyard.",
                            ImageUrl = "https://example.com/kings_cage.jpg",
                            Rating = 4.3f,
                            Title = "King's Cage",
                            yearOfPublication = 2017
                        },
                        new
                        {
                            Id = 7,
                            Author = "Agatha Christie",
                            CategoryId = 1,
                            Description = "Another classic Hercule Poirot mystery by Agatha Christie.",
                            ImageUrl = "https://example.com/death_on_the_nile.jpg",
                            Rating = 4.9f,
                            Title = "Death on the Nile",
                            yearOfPublication = 1937
                        },
                        new
                        {
                            Id = 8,
                            Author = "Victoria Aveyard",
                            CategoryId = 2,
                            Description = "The final installment in Victoria Aveyard's Red Queen series.",
                            ImageUrl = "https://example.com/war_storm.jpg",
                            Rating = 4.2f,
                            Title = "War Storm",
                            yearOfPublication = 2018
                        },
                        new
                        {
                            Id = 9,
                            Author = "Agatha Christie",
                            CategoryId = 3,
                            Description = "A groundbreaking mystery novel by Agatha Christie.",
                            ImageUrl = "https://example.com/murder_of_roger_ackroyd.jpg",
                            Rating = 4.7f,
                            Title = "The Murder of Roger Ackroyd",
                            yearOfPublication = 1926
                        },
                        new
                        {
                            Id = 10,
                            Author = "Victoria Aveyard",
                            CategoryId = 4,
                            Description = "Victoria Aveyard's fantasy novel with a unique world and characters.",
                            ImageUrl = "https://example.com/realm_breaker.jpg",
                            Rating = 4.1f,
                            Title = "Realm Breaker",
                            yearOfPublication = 2021
                        });
                });

            modelBuilder.Entity("BookListWeb.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("DisplayOrder")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DisplayOrder = 1,
                            Name = "Action"
                        },
                        new
                        {
                            Id = 2,
                            DisplayOrder = 2,
                            Name = "Drama"
                        },
                        new
                        {
                            Id = 3,
                            DisplayOrder = 3,
                            Name = "SciFi"
                        },
                        new
                        {
                            Id = 4,
                            DisplayOrder = 4,
                            Name = "History"
                        },
                        new
                        {
                            Id = 5,
                            DisplayOrder = 5,
                            Name = "Adventure"
                        },
                        new
                        {
                            Id = 6,
                            DisplayOrder = 6,
                            Name = "Kids"
                        });
                });

            modelBuilder.Entity("BookListWeb.Models.Book", b =>
                {
                    b.HasOne("BookListWeb.Models.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });
#pragma warning restore 612, 618
        }
    }
}
